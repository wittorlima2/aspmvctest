@model CadastroVeiculos.Models.ProprietarioViewModel

<div class="panel-header bg-primary-gradient">
    <div class="page-inner py-5">
        <div class="d-flex align-items-left align-items-md-center flex-column flex-md-row">
            <div>
                <h2 class="text-white pb-2 fw-bold">Editar Proprietário</h2>
                <h5 class="text-white op-7 mb-2">Módulo de gerenciamento de Proprietários.</h5>
            </div>
        </div>
    </div>
</div>
<div class="page-inner mt--5">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row mt--2">
            <div class="col-md-12">
                <div class="card full-height">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Documento, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Documento, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Documento, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { id = "Cep", @class = "form-control", onblur = "buscarCep()" } })
                                        @Html.ValidationMessageFor(model => model.Cep, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Endereco, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { id = "Endereco", @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.Status, Model.Status.ToSelectList(), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="card-action">
                    <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("Index", "Proprietarios")'">Voltar</button>
                    <input type="submit" value="Salvar" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
</div>

<script src="js/appScripts/proprietario.js"></script>

@section scripts{
    <script>
        var proprietarioComponent = new ProprietarioModule.ProprietarioComponent();
        function buscarCep() {
            var cep = $("#Cep").val();
            proprietarioComponent.getCep(cep);
        }
    </script>
}